#!/usr/bin/env escript
%%! -pa ebin -Wall

usage() ->
    io:format('Usage: codegen~n'),
    io:format('(Uses stdin/stdout.)~n').

main([]) ->
    Stream = '<stdin>',
    String = tool_chain:string_from_input(),
    Result = (catch process(Stream, String)),
    case Result of
        {_Source, {asm,AsmCode}} ->
            AsmString = codegen_emitter:asm_to_string(AsmCode),
            io:format("~s~n", [AsmString]);
        {tool_chain_exception, invalid_term} ->
            tool_chain:die(String);
        UnknownError ->
            tool_chain:die('~p~n', [UnknownError])
    end;
main(_) ->
    usage().

process(Stream, String) ->
    {{source,Lines}, {rtl,RtlCode}} = tool_chain:term_from_string(String),
    {ok, AsmCode} = codegen_driver:generate_code(Stream, RtlCode, Lines),
    {{source,Lines}, {asm,AsmCode}}.
