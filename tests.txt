     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	int main(void) {	
     5		a = a + b;	// Variable 'b' not defined
     6	}
     1	{3,program}
     2	{3,scalardec}
     3	{4,fundef}
     4	{5,binop}
     5	{5,ident}
     6	{5,binop}
     7	{5,ident}
     8	{5,ident}
     9	<stdin>:5: semantic error, not defined




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	int main(void) {
     5	  a = foo(a);	// Function 'foo' not defined
     6	}
     1	{3,program}
     2	{3,scalardec}
     3	{4,fundef}
     4	{5,binop}
     5	{5,ident}
     6	{5,funcall}
     7	{5,ident}
     8	<stdin>:5: semantic error, not defined




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	int main(void) {
     3	  output(0);	// Procedure 'output' not defined
     4	}
     1	{2,program}
     2	{2,fundef}
     3	{3,funcall}
     4	{3,intconst}
     5	<stdin>:3: semantic error, not defined




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	
     5	char a;		// Redeclaration of 'a'
     6	int main(void) {
     7	  a = 0;
     8	}
     1	{3,program}
     2	{3,scalardec}
     3	{5,scalardec}
     4	<stdin>:5: semantic error, already defined




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	
     5	void a(void) {		// Attempt to redefine variable 'a'
     6	  0;
     7	}
     8	
     9	int main(void) {
    10	  42;
    11	}
     1	{3,program}
     2	{3,scalardec}
     3	{5,fundef}
     4	<stdin>:5: semantic error, already defined




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  return 2 * n;
     5	}
     6	
     7	int a(int i) {   // Redeclaration of 'a'
     8	  return i / 2;
     9	}
    10	
    11	int main(void) {
    12	  a(2);
    13	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	{4,binop}
     6	{4,intconst}
     7	{4,ident}
     8	exp {fundef,int}
     9	act {binop,int}
    10	{7,fundef}
    11	<stdin>:7: semantic error, already defined




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a(int n) {
     4	  return 2 * n;	// Attempt to return value from procedure
     5	}
     6	
     7	int main(void) {
     8	  a(2);
     9	}
    10	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	{4,binop}
     6	{4,intconst}
     7	{4,ident}
     8	exp {fundef,void}
     9	act {binop,int}
    10	<stdin>:666: semantic error, incomp xxx




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  return;		// Void return from function
     5	}
     6	int main(void) {
     7	 a(2);
     8	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	exp {fundef,int}
     6	act {returnxxxxx,void}
     7	<stdin>:666: semantic error, incomp xxx




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  char x[1];
     5	  if (n != 0) return 2;
     6	  else return x;    // Return from function with erroneous type
     7	}
     8	
     9	int main(void) {
    10	  a(5);
    11	}
    12	
    13	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,arraydec}
     5	{5,'if'}
     6	{5,binop}
     7	{5,ident}
     8	{5,intconst}
     9	{5,return}
    10	{5,intconst}
    11	exp {fundef,int}
    12	act {intconst,int}
    13	{6,return}
    14	{6,ident}
    15	exp {fundef,int}
    16	act {arraydec,char}
    17	<stdin>:666: semantic error, incomp xxx




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int n;
     4	int main(void) {
     5	  n = 42;
     6	  n[2]; // Index an integer
     7	}
     1	{3,program}
     2	{3,scalardec}
     3	{4,fundef}
     4	{5,binop}
     5	{5,ident}
     6	{5,intconst}
     7	exp {scalardec,int}
     8	act {intconst,int}
     9	{6,arrelem}
    10	<stdin>:6: semantic error, not proper type




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(void) {
     4	  a = 1;	// 'a' is not an lval
     5	  return 0;
     6	}
     7	int main(void) {
     8	 a();
     9	}
    10	
     1	{3,program}
     2	{3,fundef}
     3	{4,binop}
     4	{4,ident}
     5	{4,intconst}
     6	<stdin>:4: semantic error, not an l-value




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int a;
     5	int main(void) {
     6	  a(2); // 'a' is not a function
     7	}
     8	
     1	{4,program}
     2	{4,scalardec}
     3	{5,fundef}
     4	{6,funcall}
     5	{6,intconst}
     6	<stdin>:6: semantic error, not proper type




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void foo(int n){
     4	  n;
     5	}
     6	
     7	int main(void) {
     8	  1 + foo(0);	// 'foo' does not return a value
     9	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,ident}
     5	{7,fundef}
     6	{8,binop}
     7	{8,intconst}
     8	{8,funcall}
     9	{8,intconst}
    10	main: []
    11	global: [{"main",
    12	          {{7,fundef},
    13	           int,"main",[],[],
    14	           [{{8,binop},
    15	             {{8,intconst},1},
    16	             '+',
    17	             {{8,funcall},"foo",[{{8,intconst},0}]}}]}},
    18	         {"foo",
    19	          {{3,fundef},
    20	           void,"foo",
    21	           [{{3,scalardec},int,"n"}],
    22	           [],
    23	           [{{4,ident},"n"}]}}]
    24	<stdin>:444: semantic error, incompatible




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int f(int n) {
     4	  return n / 2;
     5	}
     6	
     7	
     8	void p(int n) {
     9	  int f;
    10	
    11	  f = n * 2;
    12	  f(n);		// 'f' refers only to the local variable
    13	}
    14	
    15	
    16	int n;
    17	
    18	int main(void) {
    19	  p(n);
    20	}
    21	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	{4,binop}
     6	{4,ident}
     7	{4,intconst}
     8	exp {fundef,int}
     9	act {binop,int}
    10	{8,fundef}
    11	{8,scalardec}
    12	{9,scalardec}
    13	{11,binop}
    14	{11,ident}
    15	{11,binop}
    16	{11,ident}
    17	{11,intconst}
    18	exp {scalardec,int}
    19	act {binop,int}
    20	{12,funcall}
    21	{12,ident}
    22	<stdin>:12: semantic error, not proper type




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int q(int a, int b, int c) {
     4		return a*a + b*b + c*c;
     5	}
     6	
     7	int main(void) {
     8	  1 + q(1, 3);	// Too few arguments to function 'q'
     9	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{3,scalardec}
     5	{3,scalardec}
     6	{4,return}
     7	{4,binop}
     8	{4,binop}
     9	{4,binop}
    10	{4,ident}
    11	{4,ident}
    12	{4,binop}
    13	{4,ident}
    14	{4,ident}
    15	{4,binop}
    16	{4,ident}
    17	{4,ident}
    18	exp {fundef,int}
    19	act {binop,int}
    20	{7,fundef}
    21	{8,binop}
    22	{8,intconst}
    23	{8,funcall}
    24	{8,intconst}
    25	{8,intconst}
    26	main: []
    27	global: [{"main",
    28	          {{7,fundef},
    29	           int,"main",[],[],
    30	           [{{8,binop},
    31	             {{8,intconst},1},
    32	             '+',
    33	             {{8,funcall},"q",[{{8,intconst},1},{{8,intconst},3}]}}]}},
    34	         {"q",
    35	          {{3,fundef},
    36	           int,"q",
    37	           [{{3,scalardec},int,"a"},
    38	            {{3,scalardec},int,"b"},
    39	            {{3,scalardec},int,"c"}],
    40	           [],
    41	           [{{4,return},
    42	             {{4,binop},
    43	              {{4,binop},
    44	               {{4,binop},{{4,ident},"a"},'*',{{4,ident},"a"}},
    45	               '+',
    46	               {{4,binop},{{4,ident},"b"},'*',{{4,ident},"b"}}},
    47	              '+',
    48	              {{4,binop},{{4,ident},"c"},'*',{{4,ident},"c"}}}}]}}]
    49	ok




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int d(int a, int b) {
     5		return b - a;
     6	}
     7	
     8	int main (void){	
     9	  d(1, 2, 3);	// Too many arguments to function 'd'
    10	}
     1	{4,program}
     2	{4,fundef}
     3	{4,scalardec}
     4	{4,scalardec}
     5	{5,return}
     6	{5,binop}
     7	{5,ident}
     8	{5,ident}
     9	exp {fundef,int}
    10	act {binop,int}
    11	{8,fundef}
    12	{9,funcall}
    13	{9,intconst}
    14	{9,intconst}
    15	{9,intconst}
    16	main: []
    17	global: [{"main",
    18	          {{8,fundef},
    19	           int,"main",[],[],
    20	           [{{9,funcall},
    21	             "d",
    22	             [{{9,intconst},1},{{9,intconst},2},{{9,intconst},3}]}]}},
    23	         {"d",
    24	          {{4,fundef},
    25	           int,"d",
    26	           [{{4,scalardec},int,"a"},{{4,scalardec},int,"b"}],
    27	           [],
    28	           [{{5,return},{{5,binop},{{5,ident},"b"},'-',{{5,ident},"a"}}}]}}]
    29	ok




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int main(void) {
     5	  char hello[5];
     6	  hello+1; //  Attempt to use char array in arithmetic. (legal in C)
     7	  
     8	}
     9	
     1	{4,program}
     2	{4,fundef}
     3	{5,arraydec}
     4	{6,binop}
     5	{6,ident}
     6	{6,intconst}
     7	<stdin>:444: semantic error, incompatible




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char a[10];
     4	
     5	int main (void) {
     6	  a = 42;	  // assign int to array of char
     7	}
     1	{3,program}
     2	{3,arraydec}
     3	{5,fundef}
     4	{6,binop}
     5	{6,ident}
     6	{6,intconst}
     7	<stdin>:6: semantic error, not an l-value




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char a[10];
     4	int main (void) {
     5	  if (a==42) ;
     6	   // Array of char in expression
     7	}
     1	{3,program}
     2	{3,arraydec}
     3	{4,fundef}
     4	{5,'if'}
     5	{5,binop}
     6	{5,ident}
     7	{5,intconst}
     8	<stdin>:444: semantic error, incompatible




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int main(void) {
     5	  int a[10];
     6	  int b[10];
     7	  a=b;
     8	}
     9	
     1	{4,program}
     2	{4,fundef}
     3	{5,arraydec}
     4	{6,arraydec}
     5	{7,binop}
     6	{7,ident}
     7	{7,ident}
     8	<stdin>:7: semantic error, not an l-value




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  char bv[10];
     5	    return bv;  //  Return from function with erroneous type
     6	}
     7	int main (void) {
     8	  a(2);
     9	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,arraydec}
     5	{5,return}
     6	{5,ident}
     7	exp {fundef,int}
     8	act {arraydec,char}
     9	<stdin>:666: semantic error, incomp xxx




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char a[10];
     4	
     5	int main (void) {
     6	  a+1;	// Attempt to apply arithmetic to array reference
     7	        // This is legal in C, but not in uC
     8	}
     1	{3,program}
     2	{3,arraydec}
     3	{5,fundef}
     4	{6,binop}
     5	{6,ident}
     6	{6,intconst}
     7	<stdin>:444: semantic error, incompatible




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	
     5	int first(int b) {
     6	  return b[0]; //not an array!
     7	}
     8	
     9	int main (void) {
    10	  first(42);		
    11	}
     1	{5,program}
     2	{5,fundef}
     3	{5,scalardec}
     4	{6,return}
     5	{6,arrelem}
     6	<stdin>:6: semantic error, not proper type




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char first(int a[]) {
     4	  int b[10];
     5	
     6	  b = a;		// b cannot be assigned
     7	  return 1;
     8	}
     9	
     1	{3,program}
     2	{3,fundef}
     3	{3,formal_arraydec}
     4	{4,arraydec}
     5	{6,binop}
     6	{6,ident}
     7	{6,ident}
     8	<stdin>:6: semantic error, not an l-value




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int main (void) {
     4	  (1 + 2) = 3; //No assignment here!
     5	}
     6	
     1	<stdin>:4: syntax error: '='




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void f(int b[]) {
     4	  b[0]=0;
     5	}
     6	
     7	int main(void) {
     8	  char a[10];
     9	  f(a);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,formal_arraydec}
     4	{4,binop}
     5	{4,arrelem}
     6	{4,intconst}
     7	{4,intconst}
     8	exp {arrelem,int}
     9	act {intconst,int}
    10	{7,fundef}
    11	{8,arraydec}
    12	{9,funcall}
    13	{9,ident}
    14	main: [{"a",{{8,arraydec},char,"a",10}}]
    15	global: [{"main",
    16	          {{7,fundef},
    17	           int,"main",[],
    18	           [{{8,arraydec},char,"a",10}],
    19	           [{{9,funcall},"f",[{{9,ident},"a"}]}]}},
    20	         {"f",
    21	          {{3,fundef},
    22	           void,"f",
    23	           [{{3,formal_arraydec},int,"b"}],
    24	           [],
    25	           [{{4,binop},
    26	             {{4,arrelem},"b",{{4,intconst},0}},
    27	             '=',
    28	             {{4,intconst},0}}]}}]
    29	ok




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a (int n) {
     4	  if (1<2) return 2 * n;	// Attempt to return value from procedure
     5	  else 42;
     6	}
     7	
     8	int main(void) {
     9	  a(2);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,'if'}
     5	{4,binop}
     6	{4,intconst}
     7	{4,intconst}
     8	{4,return}
     9	{4,binop}
    10	{4,intconst}
    11	{4,ident}
    12	exp {fundef,void}
    13	act {binop,int}
    14	<stdin>:666: semantic error, incomp xxx




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a (int n) {
     4	  if (1<2) 42;
     5	  else  return 2 * n;	// Attempt to return value from procedure
     6	}
     7	
     8	int main(void) {
     9	  a(2);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,'if'}
     5	{4,binop}
     6	{4,intconst}
     7	{4,intconst}
     8	{4,intconst}
     9	{5,return}
    10	{5,binop}
    11	{5,intconst}
    12	{5,ident}
    13	exp {fundef,void}
    14	act {binop,int}
    15	<stdin>:666: semantic error, incomp xxx




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a (int n) {
     4	  char n;
     5	  42;
     6	}
     7	
     8	int main(void) {
     9	  a(2);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,scalardec}
     5	<stdin>:4: semantic error, already defined




     1	
     2	int main (void) {
     3	  int a;
     4	  int b[10];
     5	  
     6	  a=b;
     7	}
     1	{2,program}
     2	{2,fundef}
     3	{3,scalardec}
     4	{4,arraydec}
     5	{6,binop}
     6	{6,ident}
     7	{6,ident}
     8	exp {scalardec,int}
     9	act {arraydec,int}
    10	<stdin>:666: semantic error, incomp xxx




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	
     5	void a(void); 		// Attempt to redefine  'a' as extern
     6	
     7	
     8	int main(void) {
     9	  42;
    10	}
     1	{3,program}
     2	{3,scalardec}
     3	{5,fundec}
     4	<stdin>:5: semantic error, already defined




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void foo(int n);
     4	
     5	int main(void) {
     6	  1 + foo(0);	// 'foo' does not return a value
     7	}
     1	{3,program}
     2	{3,fundec}
     3	{3,scalardec}
     4	{5,fundef}
     5	{6,binop}
     6	{6,intconst}
     7	{6,funcall}
     8	{6,intconst}
     9	main: []
    10	global: [{"main",
    11	          {{5,fundef},
    12	           int,"main",[],[],
    13	           [{{6,binop},
    14	             {{6,intconst},1},
    15	             '+',
    16	             {{6,funcall},"foo",[{{6,intconst},0}]}}]}},
    17	         {"foo",{{3,fundec},void,"foo",[{{3,scalardec},int,"n"}]}}]
    18	<stdin>:444: semantic error, incompatible




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int q(int a, int b, int c);
     4	
     5	int main(void) {
     6	  1 + q(1, 3);	// Too few arguments to function 'q'
     7	}
     1	{3,program}
     2	{3,fundec}
     3	{3,scalardec}
     4	{3,scalardec}
     5	{3,scalardec}
     6	{5,fundef}
     7	{6,binop}
     8	{6,intconst}
     9	{6,funcall}
    10	{6,intconst}
    11	{6,intconst}
    12	main: []
    13	global: [{"main",
    14	          {{5,fundef},
    15	           int,"main",[],[],
    16	           [{{6,binop},
    17	             {{6,intconst},1},
    18	             '+',
    19	             {{6,funcall},"q",[{{6,intconst},1},{{6,intconst},3}]}}]}},
    20	         {"q",
    21	          {{3,fundec},
    22	           int,"q",
    23	           [{{3,scalardec},int,"a"},
    24	            {{3,scalardec},int,"b"},
    25	            {{3,scalardec},int,"c"}]}}]
    26	ok




     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int d(int a, int b);
     4	
     5	int main (void){	
     6	  d(1, 2, 3);	// Too many arguments to function 'd'
     7	}
     1	{3,program}
     2	{3,fundec}
     3	{3,scalardec}
     4	{3,scalardec}
     5	{5,fundef}
     6	{6,funcall}
     7	{6,intconst}
     8	{6,intconst}
     9	{6,intconst}
    10	main: []
    11	global: [{"main",
    12	          {{5,fundef},
    13	           int,"main",[],[],
    14	           [{{6,funcall},
    15	             "d",
    16	             [{{6,intconst},1},{{6,intconst},2},{{6,intconst},3}]}]}},
    17	         {"d",
    18	          {{3,fundec},
    19	           int,"d",
    20	           [{{3,scalardec},int,"a"},{{3,scalardec},int,"b"}]}}]
    21	ok




