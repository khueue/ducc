     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	int main(void) {	
     5		a = a + b;	// Variable 'b' not defined
     6	}
     1	{3,program}
     2	{3,scalardec}
     3	{4,fundef}
     4	{5,binop}
     5	{5,ident}
     6	{5,binop}
     7	{5,ident}
     8	{5,ident}
     9	<stdin>:5: semantic error, not defined



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	int main(void) {
     5	  a = foo(a);	// Function 'foo' not defined
     6	}
     1	{3,program}
     2	{3,scalardec}
     3	{4,fundef}
     4	{5,binop}
     5	{5,ident}
     6	{5,funcall}
     7	{5,ident}
     8	<stdin>:5: semantic error, not defined



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	int main(void) {
     3	  output(0);	// Procedure 'output' not defined
     4	}
     1	{2,program}
     2	{2,fundef}
     3	{3,funcall}
     4	{3,intconst}
     5	<stdin>:3: semantic error, not defined



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	
     5	char a;		// Redeclaration of 'a'
     6	int main(void) {
     7	  a = 0;
     8	}
     1	{3,program}
     2	{3,scalardec}
     3	{5,scalardec}
     4	<stdin>:5: semantic error, already defined



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	
     5	void a(void) {		// Attempt to redefine variable 'a'
     6	  0;
     7	}
     8	
     9	int main(void) {
    10	  42;
    11	}
     1	{3,program}
     2	{3,scalardec}
     3	{5,fundef}
     4	<stdin>:5: semantic error, already defined



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  return 2 * n;
     5	}
     6	
     7	int a(int i) {   // Redeclaration of 'a'
     8	  return i / 2;
     9	}
    10	
    11	int main(void) {
    12	  a(2);
    13	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	{4,binop}
     6	{4,intconst}
     7	{4,ident}
     8	{7,fundef}
     9	<stdin>:7: semantic error, already defined



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a(int n) {
     4	  return 2 * n;	// Attempt to return value from procedure
     5	}
     6	
     7	int main(void) {
     8	  a(2);
     9	}
    10	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	{4,binop}
     6	{4,intconst}
     7	{4,ident}
     8	<stdin>:4: semantic error, inconvertible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  return;		// Void return from function
     5	}
     6	int main(void) {
     7	 a(2);
     8	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	<stdin>: unknown semantic error, 
     6	{'EXIT',{badarg,[{analyzer,get_meta,1},
     7	                 {analyzer,get_line,1},
     8	                 {analyzer,convertible_to,3},
     9	                 {analyzer,analyze_return,2},
    10	                 {analyzer,analyze,2},
    11	                 {analyzer,analyze_fundef,2},
    12	                 {analyzer,analyze,2},
    13	                 {analyzer,analyze,1}]}}



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  char x[1];
     5	  if (n != 0) return 2;
     6	  else return x;    // Return from function with erroneous type
     7	}
     8	
     9	int main(void) {
    10	  a(5);
    11	}
    12	
    13	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,arraydec}
     5	{5,'if'}
     6	{5,binop}
     7	{5,ident}
     8	{5,intconst}
     9	{5,return}
    10	{5,intconst}
    11	{6,return}
    12	{6,ident}
    13	<stdin>:6: semantic error, inconvertible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int n;
     4	int main(void) {
     5	  n = 42;
     6	  n[2]; // Index an integer
     7	}
     1	{3,program}
     2	{3,scalardec}
     3	{4,fundef}
     4	{5,binop}
     5	{5,ident}
     6	{5,intconst}
     7	{6,arrelem}
     8	<stdin>:6: semantic error, not proper type



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(void) {
     4	  a = 1;	// 'a' is not an lval
     5	  return 0;
     6	}
     7	int main(void) {
     8	 a();
     9	}
    10	
     1	{3,program}
     2	{3,fundef}
     3	{4,binop}
     4	{4,ident}
     5	{4,intconst}
     6	<stdin>:4: semantic error, not an l-value



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int a;
     5	int main(void) {
     6	  a(2); // 'a' is not a function
     7	}
     8	
     1	{4,program}
     2	{4,scalardec}
     3	{5,fundef}
     4	{6,funcall}
     5	{6,intconst}
     6	<stdin>:6: semantic error, not proper type



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void foo(int n){
     4	  n;
     5	}
     6	
     7	int main(void) {
     8	  1 + foo(0);	// 'foo' does not return a value
     9	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,ident}
     5	{7,fundef}
     6	{8,binop}
     7	{8,intconst}
     8	{8,funcall}
     9	{8,intconst}
    10	<stdin>:8: semantic error, incompatible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int f(int n) {
     4	  return n / 2;
     5	}
     6	
     7	
     8	void p(int n) {
     9	  int f;
    10	
    11	  f = n * 2;
    12	  f(n);		// 'f' refers only to the local variable
    13	}
    14	
    15	
    16	int n;
    17	
    18	int main(void) {
    19	  p(n);
    20	}
    21	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,return}
     5	{4,binop}
     6	{4,ident}
     7	{4,intconst}
     8	{8,fundef}
     9	{8,scalardec}
    10	{9,scalardec}
    11	{11,binop}
    12	{11,ident}
    13	{11,binop}
    14	{11,ident}
    15	{11,intconst}
    16	{12,funcall}
    17	{12,ident}
    18	<stdin>:12: semantic error, not proper type



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int q(int a, int b, int c) {
     4		return a*a + b*b + c*c;
     5	}
     6	
     7	int main(void) {
     8	  1 + q(1, 3);	// Too few arguments to function 'q'
     9	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{3,scalardec}
     5	{3,scalardec}
     6	{4,return}
     7	{4,binop}
     8	{4,binop}
     9	{4,binop}
    10	{4,ident}
    11	{4,ident}
    12	{4,binop}
    13	{4,ident}
    14	{4,ident}
    15	{4,binop}
    16	{4,ident}
    17	{4,ident}
    18	{7,fundef}
    19	{8,binop}
    20	{8,intconst}
    21	{8,funcall}
    22	{8,intconst}
    23	{8,intconst}
    24	<stdin>:8: semantic error, incompatible arguments



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int d(int a, int b) {
     5		return b - a;
     6	}
     7	
     8	int main (void){	
     9	  d(1, 2, 3);	// Too many arguments to function 'd'
    10	}
     1	{4,program}
     2	{4,fundef}
     3	{4,scalardec}
     4	{4,scalardec}
     5	{5,return}
     6	{5,binop}
     7	{5,ident}
     8	{5,ident}
     9	{8,fundef}
    10	{9,funcall}
    11	{9,intconst}
    12	{9,intconst}
    13	{9,intconst}
    14	<stdin>:9: semantic error, incompatible arguments



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int main(void) {
     5	  char hello[5];
     6	  hello+1; //  Attempt to use char array in arithmetic. (legal in C)
     7	  
     8	}
     9	
     1	{4,program}
     2	{4,fundef}
     3	{5,arraydec}
     4	{6,binop}
     5	{6,ident}
     6	{6,intconst}
     7	<stdin>:6: semantic error, incompatible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char a[10];
     4	
     5	int main (void) {
     6	  a = 42;	  // assign int to array of char
     7	}
     1	{3,program}
     2	{3,arraydec}
     3	{5,fundef}
     4	{6,binop}
     5	{6,ident}
     6	{6,intconst}
     7	<stdin>:6: semantic error, not an l-value



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char a[10];
     4	int main (void) {
     5	  if (a==42) ;
     6	   // Array of char in expression
     7	}
     1	{3,program}
     2	{3,arraydec}
     3	{4,fundef}
     4	{5,'if'}
     5	{5,binop}
     6	{5,ident}
     7	{5,intconst}
     8	<stdin>:5: semantic error, incompatible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	int main(void) {
     5	  int a[10];
     6	  int b[10];
     7	  a=b;
     8	}
     9	
     1	{4,program}
     2	{4,fundef}
     3	{5,arraydec}
     4	{6,arraydec}
     5	{7,binop}
     6	{7,ident}
     7	{7,ident}
     8	<stdin>:7: semantic error, not an l-value



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a(int n) {
     4	  char bv[10];
     5	    return bv;  //  Return from function with erroneous type
     6	}
     7	int main (void) {
     8	  a(2);
     9	}
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,arraydec}
     5	{5,return}
     6	{5,ident}
     7	<stdin>:5: semantic error, inconvertible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char a[10];
     4	
     5	int main (void) {
     6	  a+1;	// Attempt to apply arithmetic to array reference
     7	        // This is legal in C, but not in uC
     8	}
     1	{3,program}
     2	{3,arraydec}
     3	{5,fundef}
     4	{6,binop}
     5	{6,ident}
     6	{6,intconst}
     7	<stdin>:6: semantic error, incompatible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	
     4	
     5	int first(int b) {
     6	  return b[0]; //not an array!
     7	}
     8	
     9	int main (void) {
    10	  first(42);		
    11	}
     1	{5,program}
     2	{5,fundef}
     3	{5,scalardec}
     4	{6,return}
     5	{6,arrelem}
     6	<stdin>:6: semantic error, not proper type



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	char first(int a[]) {
     4	  int b[10];
     5	
     6	  b = a;		// b cannot be assigned
     7	  return 1;
     8	}
     9	
     1	{3,program}
     2	{3,fundef}
     3	{3,formal_arraydec}
     4	{4,arraydec}
     5	{6,binop}
     6	{6,ident}
     7	{6,ident}
     8	<stdin>:6: semantic error, not an l-value



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int main (void) {
     4	  (1 + 2) = 3; //No assignment here!
     5	}
     6	
     1	<stdin>:4: syntax error: '='



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void f(int b[]) {
     4	  b[0]=0;
     5	}
     6	
     7	int main(void) {
     8	  char a[10];
     9	  f(a);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,formal_arraydec}
     4	{4,binop}
     5	{4,arrelem}
     6	{4,intconst}
     7	{4,intconst}
     8	{7,fundef}
     9	{8,arraydec}
    10	{9,funcall}
    11	{9,ident}
    12	<stdin>:9: semantic error, inconvertible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a (int n) {
     4	  if (1<2) return 2 * n;	// Attempt to return value from procedure
     5	  else 42;
     6	}
     7	
     8	int main(void) {
     9	  a(2);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,'if'}
     5	{4,binop}
     6	{4,intconst}
     7	{4,intconst}
     8	{4,return}
     9	{4,binop}
    10	{4,intconst}
    11	{4,ident}
    12	<stdin>:4: semantic error, inconvertible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a (int n) {
     4	  if (1<2) 42;
     5	  else  return 2 * n;	// Attempt to return value from procedure
     6	}
     7	
     8	int main(void) {
     9	  a(2);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,'if'}
     5	{4,binop}
     6	{4,intconst}
     7	{4,intconst}
     8	{4,intconst}
     9	{5,return}
    10	{5,binop}
    11	{5,intconst}
    12	{5,ident}
    13	<stdin>:5: semantic error, inconvertible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void a (int n) {
     4	  char n;
     5	  42;
     6	}
     7	
     8	int main(void) {
     9	  a(2);
    10	}
    11	
     1	{3,program}
     2	{3,fundef}
     3	{3,scalardec}
     4	{4,scalardec}
     5	<stdin>:4: semantic error, already defined



     1	
     2	int main (void) {
     3	  int a;
     4	  int b[10];
     5	  
     6	  a=b;
     7	}
     1	{2,program}
     2	{2,fundef}
     3	{3,scalardec}
     4	{4,arraydec}
     5	{6,binop}
     6	{6,ident}
     7	{6,ident}
     8	<stdin>:6: semantic error, inconvertible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int a;
     4	
     5	void a(void); 		// Attempt to redefine  'a' as extern
     6	
     7	
     8	int main(void) {
     9	  42;
    10	}
     1	{3,program}
     2	{3,scalardec}
     3	{5,fundec}
     4	<stdin>:5: semantic error, already defined



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	void foo(int n);
     4	
     5	int main(void) {
     6	  1 + foo(0);	// 'foo' does not return a value
     7	}
     1	{3,program}
     2	{3,fundec}
     3	{3,scalardec}
     4	{5,fundef}
     5	{6,binop}
     6	{6,intconst}
     7	{6,funcall}
     8	{6,intconst}
     9	<stdin>:6: semantic error, incompatible types



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int q(int a, int b, int c);
     4	
     5	int main(void) {
     6	  1 + q(1, 3);	// Too few arguments to function 'q'
     7	}
     1	{3,program}
     2	{3,fundec}
     3	{3,scalardec}
     4	{3,scalardec}
     5	{3,scalardec}
     6	{5,fundef}
     7	{6,binop}
     8	{6,intconst}
     9	{6,funcall}
    10	{6,intconst}
    11	{6,intconst}
    12	<stdin>:6: semantic error, incompatible arguments



     1	/* Test file for semantic errors. Contains exactly one error. */
     2	
     3	int d(int a, int b);
     4	
     5	int main (void){	
     6	  d(1, 2, 3);	// Too many arguments to function 'd'
     7	}
     1	{3,program}
     2	{3,fundec}
     3	{3,scalardec}
     4	{3,scalardec}
     5	{5,fundef}
     6	{6,funcall}
     7	{6,intconst}
     8	{6,intconst}
     9	{6,intconst}
    10	<stdin>:6: semantic error, incompatible arguments



