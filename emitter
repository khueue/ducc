#!/usr/bin/env escript
%%! -pa ebin -Wall

usage() ->
    io:format('Usage: emitter~n'),
    io:format('(Uses stdin/stdout.)~n').

main([]) ->
    Stream = '<stdin>',
    String = tool_chain:string_from_input(),
    {ok, AsmString} = try process(Stream, String)
    catch
        {tool_chain_exception, invalid_term} -> tool_chain:die(String);
        {_CompilationException, Message}     -> tool_chain:die(Message)
    end,
    tool_chain:raw_string_to_output(AsmString);
main(_) ->
    usage().

process(Stream, String) ->
    {{source,Lines}, {asm,AsmCode}} = tool_chain:term_from_string(String),
    {ok, _AsmString} = emitter_driver:asm_to_string(Stream, AsmCode, Lines).
