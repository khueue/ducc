{{source,[{1,[]},
          {2,"/* Test."},
          {3,"** 8-queen."},
          {4,[]},
          {5,"Expected output:"},
          {6,[]},
          {7,"04752613"},
          {8,[]},
          {9,"This corresponds to the following board:"},
          {10,[]},
          {11,"--x-----"},
          {12,"-----x--"},
          {13,"---x----"},
          {14,"-x------"},
          {15,"-------x"},
          {16,"----x---"},
          {17,"------x-"},
          {18,"x-------"},
          {19,[]},
          {20,"*/"},
          {21,[]},
          {22,"int n;"},
          {23,"int board[8];"},
          {24,[]},
          {25,"void putint(int x);"},
          {26,[]},
          {27,"void printboard(int board[]) {"},
          {28,"  int i;"},
          {29,"  i = 0;"},
          {30,"  while(i < n) {"},
          {31,"      putint( board[i]);"},
          {32,"      i = i+1;"},
          {33,"    }"},
          {34,"}"},
          {35,[]},
          {36,"int check(int col, int row) {"},
          {37,"  int i;"},
          {38,"  int j;"},
          {39,[]},
          {40,"  i = col-1;"},
          {41,"  while (i >= 0) {"},
          {42,"    j = board[i];"},
          {43,"    if (j == row) return 0;               // Same row"},
          {44,"    if (j > row && col-i == j-row) "},
          {45,"      return 0;                           // Diagonal..."},
          {46,"    if (col-i == row-j) "},
          {47,"      return 0;                           // ...diagonal"},
          {48,"    i = i-1;"},
          {49,"  }"},
          {50,"  return 1;"},
          {51,"}"},
          {52,[]},
          {53,"int queen(int col, int row) {"},
          {54,"  if (col >= n) "},
          {55,
           "    return 1; // Returning false will generate all solutions..."},
          {56,"  while (row < n) {"},
          {57,"    board[col] = row;"},
          {58,"    if (check(col,row) && queen(col+1,0))"},
          {59,"      return 1;"},
          {60,"    row = row + 1;"},
          {61,"  }"},
          {62,"  return 0;"},
          {63,"}"},
          {64,[]},
          {65,"int main(void) {"},
          {66,"  n = 8;"},
          {67,"  queen(0,0);"},
          {68,"  printboard(board);"},
          {69,"}"},
          {70,[]},
          {71,[]},
          {72,[]}]},
 {tokens,[{int,22},
          {ident,22,"n"},
          {';',22},
          {int,23},
          {ident,23,"board"},
          {'[',23},
          {intconst,23,8},
          {']',23},
          {';',23},
          {void,25},
          {ident,25,"putint"},
          {'(',25},
          {int,25},
          {ident,25,"x"},
          {')',25},
          {';',25},
          {void,27},
          {ident,27,"printboard"},
          {'(',27},
          {int,27},
          {ident,27,"board"},
          {'[',27},
          {']',27},
          {')',27},
          {'{',27},
          {int,28},
          {ident,28,"i"},
          {';',28},
          {ident,29,"i"},
          {'=',29},
          {intconst,29,0},
          {';',29},
          {while,30},
          {'(',30},
          {ident,30,"i"},
          {'<',30},
          {ident,30,"n"},
          {')',30},
          {'{',30},
          {ident,31,"putint"},
          {'(',31},
          {ident,31,"board"},
          {'[',31},
          {ident,31,"i"},
          {']',31},
          {')',31},
          {';',31},
          {ident,32,"i"},
          {'=',32},
          {ident,32,"i"},
          {'+',32},
          {intconst,32,1},
          {';',32},
          {'}',33},
          {'}',34},
          {int,36},
          {ident,36,"check"},
          {'(',36},
          {int,36},
          {ident,36,"col"},
          {',',36},
          {int,36},
          {ident,36,"row"},
          {')',36},
          {'{',36},
          {int,37},
          {ident,37,"i"},
          {';',37},
          {int,38},
          {ident,38,"j"},
          {';',38},
          {ident,40,"i"},
          {'=',40},
          {ident,40,"col"},
          {'-',40},
          {intconst,40,1},
          {';',40},
          {while,41},
          {'(',41},
          {ident,41,"i"},
          {'>=',41},
          {intconst,41,0},
          {')',41},
          {'{',41},
          {ident,42,"j"},
          {'=',42},
          {ident,42,"board"},
          {'[',42},
          {ident,42,"i"},
          {']',42},
          {';',42},
          {'if',43},
          {'(',43},
          {ident,43,"j"},
          {'==',43},
          {ident,43,"row"},
          {')',43},
          {return,43},
          {intconst,43,0},
          {';',43},
          {'if',44},
          {'(',44},
          {ident,44,"j"},
          {'>',44},
          {ident,44,"row"},
          {'&&',44},
          {ident,44,"col"},
          {'-',44},
          {ident,44,"i"},
          {'==',44},
          {ident,44,"j"},
          {'-',44},
          {ident,44,"row"},
          {')',44},
          {return,45},
          {intconst,45,0},
          {';',45},
          {'if',46},
          {'(',46},
          {ident,46,"col"},
          {'-',46},
          {ident,46,"i"},
          {'==',46},
          {ident,46,"row"},
          {'-',46},
          {ident,46,"j"},
          {')',46},
          {return,47},
          {intconst,47,0},
          {';',47},
          {ident,48,"i"},
          {'=',48},
          {ident,48,"i"},
          {'-',48},
          {intconst,48,1},
          {';',48},
          {'}',49},
          {return,50},
          {intconst,50,1},
          {';',50},
          {'}',51},
          {int,53},
          {ident,53,"queen"},
          {'(',53},
          {int,53},
          {ident,53,"col"},
          {',',53},
          {int,53},
          {ident,53,"row"},
          {')',53},
          {'{',53},
          {'if',54},
          {'(',54},
          {ident,54,"col"},
          {'>=',54},
          {ident,54,"n"},
          {')',54},
          {return,55},
          {intconst,55,1},
          {';',55},
          {while,56},
          {'(',56},
          {ident,56,"row"},
          {'<',56},
          {ident,56,"n"},
          {')',56},
          {'{',56},
          {ident,57,"board"},
          {'[',57},
          {ident,57,"col"},
          {']',57},
          {'=',57},
          {ident,57,"row"},
          {';',57},
          {'if',58},
          {'(',58},
          {ident,58,"check"},
          {'(',58},
          {ident,58,"col"},
          {',',58},
          {ident,58,"row"},
          {')',58},
          {'&&',58},
          {ident,58,"queen"},
          {'(',58},
          {ident,58,"col"},
          {'+',58},
          {intconst,58,1},
          {',',58},
          {intconst,58,0},
          {')',58},
          {')',58},
          {return,59},
          {intconst,59,1},
          {';',59},
          {ident,60,"row"},
          {'=',60},
          {ident,60,"row"},
          {'+',60},
          {intconst,60,1},
          {';',60},
          {'}',61},
          {return,62},
          {intconst,62,0},
          {';',62},
          {'}',63},
          {int,65},
          {ident,65,"main"},
          {'(',65},
          {void,65},
          {')',65},
          {'{',65},
          {ident,66,"n"},
          {'=',66},
          {intconst,66,8},
          {';',66},
          {ident,67,"queen"},
          {'(',67},
          {intconst,67,0},
          {',',67},
          {intconst,67,0},
          {')',67},
          {';',67},
          {ident,68,"printboard"},
          {'(',68},
          {ident,68,"board"},
          {')',68},
          {';',68},
          {'}',69}]}}.
