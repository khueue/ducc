{{22,program},
 [{{22,fundec},void,getstring,[{{22,formal_arraydec},char,s}]},
  {{23,fundec},void,putstring,[{{23,formal_arraydec},char,s}]},
  {{24,fundec},void,putint,[{{24,scalardec},int,i}]},
  {{27,scalardec},int,p},
  {{28,arraydec},char,s,80},
  {{30,scalardec},int,zero},
  {{31,scalardec},int,nine},
  {{32,scalardec},int,plus},
  {{33,scalardec},int,minus},
  {{34,scalardec},int,times},
  {{35,scalardec},int,'div'},
  {{36,scalardec},int,lpar},
  {{37,scalardec},int,rpar},
  {{39,arraydec},char,bad_number,11},
  {{40,arraydec},char,bad_expression,15},
  {{42,arraydec},char,cr,2},
  {{44,arraydec},char,test_data,21},
  {{46,fundef},
   int,isNumber,
   [{{46,scalardec},char,c}],
   {[],
    [{{47,return},
      {{47,binop},
       {{47,binop},{{47,arrelem},s,{{47,ident},p}},'>=',{{47,ident},zero}},
       '&&',
       {{47,binop},
        {{47,arrelem},s,{{47,ident},p}},
        '<=',
        {{47,ident},nine}}}}]}},
  {{51,fundef},
   int,expr,
   [{{51,scalardec},int,l}],
   {[{{52,scalardec},int,a},{{53,scalardec},int,b}],
    [{{54,'if'},
      {{54,binop},{{54,ident},l},'==',{{54,intconst},0}},
      [{{55,binop},{{55,ident},a},'=',{{55,funcall},expr,[{{55,intconst},1}]}},
       {{56,while},
        {{56,unop},
         '!',
         {{56,binop},
          {{56,binop},{{56,arrelem},s,{{56,ident},p}},'!=',{{56,ident},plus}},
          '&&',
          {{56,binop},
           {{56,arrelem},s,{{56,ident},p}},
           '!=',
           {{56,ident},minus}}}},
        [{{57,'if'},
          {{57,binop},{{57,arrelem},s,{{57,ident},p}},'==',{{57,ident},plus}},
          [{{59,binop},
            {{59,ident},p},
            '=',
            {{59,binop},{{59,ident},p},'+',{{59,intconst},1}}},
           {{60,binop},
            {{60,ident},b},
            '=',
            {{60,funcall},expr,[{{60,intconst},1}]}},
           {{61,binop},
            {{61,ident},a},
            '=',
            {{61,binop},{{61,ident},a},'+',{{61,ident},b}}}],
          [{{65,binop},
            {{65,ident},p},
            '=',
            {{65,binop},{{65,ident},p},'+',{{65,intconst},1}}},
           {{66,binop},
            {{66,ident},b},
            '=',
            {{66,funcall},expr,[{{66,intconst},1}]}},
           {{67,binop},
            {{67,ident},a},
            '=',
            {{67,binop},{{67,ident},a},'-',{{67,ident},b}}}]}]},
       {{70,return},{{70,ident},a}}],
      {{72,'if'},
       {{72,binop},{{72,ident},l},'==',{{72,intconst},1}},
       [{{73,binop},
         {{73,ident},a},
         '=',
         {{73,funcall},expr,[{{73,intconst},2}]}},
        {{74,while},
         {{74,unop},
          '!',
          {{74,binop},
           {{74,binop},
            {{74,arrelem},s,{{74,ident},p}},
            '!=',
            {{74,ident},times}},
           '&&',
           {{74,binop},
            {{74,arrelem},s,{{74,ident},p}},
            '!=',
            {{74,ident},'div'}}}},
         [{{75,'if'},
           {{75,binop},
            {{75,arrelem},s,{{75,ident},p}},
            '==',
            {{75,ident},times}},
           [{{77,binop},
             {{77,ident},p},
             '=',
             {{77,binop},{{77,ident},p},'+',{{77,intconst},1}}},
            {{78,binop},
             {{78,ident},b},
             '=',
             {{78,funcall},expr,[{{78,intconst},2}]}},
            {{79,binop},
             {{79,ident},a},
             '=',
             {{79,binop},{{79,ident},a},'*',{{79,ident},b}}}],
           [{{83,binop},
             {{83,ident},p},
             '=',
             {{83,binop},{{83,ident},p},'+',{{83,intconst},1}}},
            {{84,binop},
             {{84,ident},b},
             '=',
             {{84,funcall},expr,[{{84,intconst},2}]}},
            {{85,binop},
             {{85,ident},a},
             '=',
             {{85,binop},{{85,ident},a},'/',{{85,ident},b}}}]}]},
        {{88,return},{{88,ident},a}}],
       {{90,'if'},
        {{90,binop},{{90,ident},l},'==',{{90,intconst},2}},
        [{{91,'if'},
          {{91,binop},{{91,arrelem},s,{{91,ident},p}},'==',{{91,ident},lpar}},
          [{{92,binop},
            {{92,ident},p},
            '=',
            {{92,binop},{{92,ident},p},'+',{{92,intconst},1}}},
           {{93,binop},
            {{93,ident},a},
            '=',
            {{93,funcall},expr,[{{93,intconst},0}]}},
           {{94,'if'},
            {{94,binop},
             {{94,arrelem},s,{{94,ident},p}},
             '!=',
             {{94,ident},rpar}},
            [{{95,funcall},putstring,[{{95,ident},bad_expression}]},
             {{96,funcall},putstring,[{{96,ident},cr}]}],
            nil},
           {{98,binop},
            {{98,ident},p},
            '=',
            {{98,binop},{{98,ident},p},'+',{{98,intconst},1}}},
           {{99,return},{{99,ident},a}}],
          {{101,'if'},
           {{101,unop},
            '!',
            {{101,funcall},isNumber,[{{101,arrelem},s,{{101,ident},p}}]}},
           [{{102,funcall},putstring,[{{102,ident},bad_number}]},
            {{103,funcall},putstring,[{{103,ident},cr}]},
            {{104,return},{{104,intconst},0}}],
           [{{107,binop},{{107,ident},a},'=',{{107,intconst},0}},
            {{108,while},
             {{108,funcall},isNumber,[{{108,arrelem},s,{{108,ident},p}}]},
             [{{109,binop},
               {{109,ident},a},
               '=',
               {{109,binop},
                {{109,binop},{{109,ident},a},'*',{{109,intconst},10}},
                '+',
                {{109,binop},
                 {{109,arrelem},s,{{109,ident},p}},
                 '-',
                 {{109,ident},zero}}}},
              {{110,binop},
               {{110,ident},p},
               '=',
               {{110,binop},{{110,ident},p},'+',{{110,intconst},1}}}]},
            {{112,return},{{112,ident},a}}]}}],
        nil}}}]}},
  {{117,fundef},
   int,main,[],
   {[],
    [{{118,binop},{{118,ident},zero},'=',{{118,intconst},48}},
     {{119,binop},{{119,ident},nine},'=',{{119,intconst},57}},
     {{120,binop},{{120,ident},plus},'=',{{120,intconst},43}},
     {{121,binop},{{121,ident},minus},'=',{{121,intconst},45}},
     {{122,binop},{{122,ident},times},'=',{{122,intconst},42}},
     {{123,binop},{{123,ident},'div'},'=',{{123,intconst},47}},
     {{124,binop},{{124,ident},lpar},'=',{{124,intconst},40}},
     {{125,binop},{{125,ident},rpar},'=',{{125,intconst},41}},
     {{127,binop},
      {{127,arrelem},bad_number,{{127,intconst},0}},
      '=',
      {{127,charconst},'B'}},
     {{128,binop},
      {{128,arrelem},bad_number,{{128,intconst},1}},
      '=',
      {{128,charconst},a}},
     {{129,binop},
      {{129,arrelem},bad_number,{{129,intconst},2}},
      '=',
      {{129,charconst},d}},
     {{130,binop},
      {{130,arrelem},bad_number,{{130,intconst},3}},
      '=',
      {{130,charconst},' '}},
     {{131,binop},
      {{131,arrelem},bad_number,{{131,intconst},4}},
      '=',
      {{131,charconst},n}},
     {{132,binop},
      {{132,arrelem},bad_number,{{132,intconst},5}},
      '=',
      {{132,charconst},u}},
     {{133,binop},
      {{133,arrelem},bad_number,{{133,intconst},6}},
      '=',
      {{133,charconst},m}},
     {{134,binop},
      {{134,arrelem},bad_number,{{134,intconst},7}},
      '=',
      {{134,charconst},b}},
     {{135,binop},
      {{135,arrelem},bad_number,{{135,intconst},8}},
      '=',
      {{135,charconst},e}},
     {{136,binop},
      {{136,arrelem},bad_number,{{136,intconst},9}},
      '=',
      {{136,charconst},r}},
     {{137,binop},
      {{137,arrelem},bad_number,{{137,intconst},10}},
      '=',
      {{137,intconst},0}},
     {{140,binop},
      {{140,arrelem},bad_expression,{{140,intconst},0}},
      '=',
      {{140,charconst},'B'}},
     {{141,binop},
      {{141,arrelem},bad_expression,{{141,intconst},1}},
      '=',
      {{141,charconst},a}},
     {{142,binop},
      {{142,arrelem},bad_expression,{{142,intconst},2}},
      '=',
      {{142,charconst},d}},
     {{143,binop},
      {{143,arrelem},bad_expression,{{143,intconst},3}},
      '=',
      {{143,charconst},' '}},
     {{144,binop},
      {{144,arrelem},bad_expression,{{144,intconst},4}},
      '=',
      {{144,charconst},e}},
     {{145,binop},
      {{145,arrelem},bad_expression,{{145,intconst},5}},
      '=',
      {{145,charconst},x}},
     {{146,binop},
      {{146,arrelem},bad_expression,{{146,intconst},6}},
      '=',
      {{146,charconst},p}},
     {{147,binop},
      {{147,arrelem},bad_expression,{{147,intconst},7}},
      '=',
      {{147,charconst},r}},
     {{148,binop},
      {{148,arrelem},bad_expression,{{148,intconst},8}},
      '=',
      {{148,charconst},e}},
     {{149,binop},
      {{149,arrelem},bad_expression,{{149,intconst},9}},
      '=',
      {{149,charconst},s}},
     {{150,binop},
      {{150,arrelem},bad_expression,{{150,intconst},10}},
      '=',
      {{150,charconst},s}},
     {{151,binop},
      {{151,arrelem},bad_expression,{{151,intconst},11}},
      '=',
      {{151,charconst},i}},
     {{152,binop},
      {{152,arrelem},bad_expression,{{152,intconst},12}},
      '=',
      {{152,charconst},o}},
     {{153,binop},
      {{153,arrelem},bad_expression,{{153,intconst},13}},
      '=',
      {{153,charconst},n}},
     {{154,binop},
      {{154,arrelem},bad_expression,{{154,intconst},14}},
      '=',
      {{154,intconst},0}},
     {{156,binop},
      {{156,arrelem},cr,{{156,intconst},0}},
      '=',
      {{156,charconst},'\\n'}},
     {{157,binop},
      {{157,arrelem},cr,{{157,intconst},1}},
      '=',
      {{157,intconst},0}},
     {{159,binop},
      {{159,arrelem},test_data,{{159,intconst},0}},
      '=',
      {{159,charconst},'('}},
     {{160,binop},
      {{160,arrelem},test_data,{{160,intconst},1}},
      '=',
      {{160,charconst},'1'}},
     {{161,binop},
      {{161,arrelem},test_data,{{161,intconst},2}},
      '=',
      {{161,charconst},'2'}},
     {{162,binop},
      {{162,arrelem},test_data,{{162,intconst},3}},
      '=',
      {{162,charconst},'-'}},
     {{163,binop},
      {{163,arrelem},test_data,{{163,intconst},4}},
      '=',
      {{163,charconst},'4'}},
     {{164,binop},
      {{164,arrelem},test_data,{{164,intconst},5}},
      '=',
      {{164,charconst},')'}},
     {{165,binop},
      {{165,arrelem},test_data,{{165,intconst},6}},
      '=',
      {{165,charconst},'+'}},
     {{166,binop},
      {{166,arrelem},test_data,{{166,intconst},7}},
      '=',
      {{166,charconst},'('}},
     {{167,binop},
      {{167,arrelem},test_data,{{167,intconst},8}},
      '=',
      {{167,charconst},'9'}},
     {{168,binop},
      {{168,arrelem},test_data,{{168,intconst},9}},
      '=',
      {{168,charconst},'9'}},
     {{169,binop},
      {{169,arrelem},test_data,{{169,intconst},10}},
      '=',
      {{169,charconst},'-'}},
     {{170,binop},
      {{170,arrelem},test_data,{{170,intconst},11}},
      '=',
      {{170,charconst},'1'}},
     {{171,binop},
      {{171,arrelem},test_data,{{171,intconst},12}},
      '=',
      {{171,charconst},'1'}},
     {{172,binop},
      {{172,arrelem},test_data,{{172,intconst},13}},
      '=',
      {{172,charconst},'+'}},
     {{173,binop},
      {{173,arrelem},test_data,{{173,intconst},14}},
      '=',
      {{173,charconst},'1'}},
     {{174,binop},
      {{174,arrelem},test_data,{{174,intconst},15}},
      '=',
      {{174,charconst},'6'}},
     {{175,binop},
      {{175,arrelem},test_data,{{175,intconst},16}},
      '=',
      {{175,charconst},')'}},
     {{176,binop},
      {{176,arrelem},test_data,{{176,intconst},17}},
      '=',
      {{176,charconst},'*'}},
     {{177,binop},
      {{177,arrelem},test_data,{{177,intconst},18}},
      '=',
      {{177,charconst},'1'}},
     {{178,binop},
      {{178,arrelem},test_data,{{178,intconst},19}},
      '=',
      {{178,charconst},'9'}},
     {{179,binop},
      {{179,arrelem},test_data,{{179,intconst},20}},
      '=',
      {{179,intconst},0}},
     {{181,funcall},getstring,[{{181,ident},s}]},
     {{183,'if'},
      {{183,binop},
       {{183,arrelem},s,{{183,intconst},0}},
       '==',
       {{183,charconst},t}},
      [{{184,binop},{{184,ident},p},'=',{{184,intconst},0}},
       {{185,while},
        {{185,binop},
         {{185,arrelem},test_data,{{185,ident},p}},
         '!=',
         {{185,intconst},0}},
        [{{186,binop},
          {{186,arrelem},s,{{186,ident},p}},
          '=',
          {{186,arrelem},test_data,{{186,ident},p}}},
         {{187,binop},
          {{187,ident},p},
          '=',
          {{187,binop},{{187,ident},p},'+',{{187,intconst},1}}}]},
       {{189,binop},{{189,arrelem},s,{{189,ident},p}},'=',{{189,intconst},0}}],
      nil},
     {{192,binop},{{192,ident},p},'=',{{192,intconst},0}},
     {{193,funcall},putint,[{{193,funcall},expr,[{{193,intconst},0}]}]},
     {{194,funcall},putstring,[{{194,ident},cr}]}]}}]}.
