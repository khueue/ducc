{{source,[{1,"/* "},
          {2,"   Factorial function. Prints factorial of all numbers from 0 to 10."},
          {3,"*/"},
          {4,[]},
          {5,"void putint(int i);"},
          {6,"void putstring(char s[]);"},
          {7,[]},
          {8,"int fac(int n) {"},
          {9,"  if (n == 0) return 1;"},
          {10,"  else return n*fac(n-1);"},
          {11,"}"},
          {12,[]},
          {13,"int a;"},
          {14,"int main(void) {"},
          {15,"  int i;"},
          {16,"  char space[2];"},
          {17,"  char cr[2];"},
          {18,"  space[0] = ' ';  space[1] = 0;"},
          {19,"  cr[0]    = '\\n'; cr[1]    = 0;"},
          {20,[]},
          {21,"  i = 0;"},
          {22,[]},
          {23,"  while (i<=10) {"},
          {24,"    putint(i);"},
          {25,"    putstring(space);"},
          {26,"    putint(fac(i));"},
          {27,"    putstring(cr);"},
          {28,"    i = i + 1;"},
          {29,"  }"},
          {30,"}"}]},
 {asm,[[{segment,text},
        {globl,{label,"fac"}},
        {labdef,{label,"fac"}},
        {subu,sp,sp,36},
        {sw,fp,32,sp},
        {sw,ra,28,sp},
        {addu,fp,sp,36},
        {li,t0,0},
        {sw,t0,0,sp},
        {lw,t0,0,fp},
        {lw,t1,0,sp},
        {seq,t2,t0,t1},
        {sw,t2,4,sp},
        {xxx,"--- XXX UNHANDLED: cjump"},
        {li,t0,1},
        {sw,t0,8,sp},
        {lw,t0,8,sp},
        {sw,t0,12,sp},
        {j,{label,100,"fac_end"}},
        {j,{label,102,"if_end"}},
        {labdef,{label,101,"if_else"}},
        {li,t0,1},
        {sw,t0,16,sp},
        {lw,t0,0,fp},
        {lw,t1,16,sp},
        {sub,t2,t0,t1},
        {sw,t2,20,sp},
        {xxx,"--- XXX UNHANDLED: call"},
        {lw,t0,0,fp},
        {lw,t1,24,sp},
        {mul,t2,t0,t1},
        {sw,t2,28,sp},
        {lw,t0,28,sp},
        {sw,t0,12,sp},
        {j,{label,100,"fac_end"}},
        {labdef,{label,102,"if_end"}},
        {labdef,{label,100,"fac_end"}},
        {lw,ra,28,sp},
        {lw,fp,32,sp},
        {addu,sp,sp,36},
        {jr,ra}],
       [{segment,data},{align,4},{labdef,{label,"a"}},{space,4}],
       [{segment,text},
        {globl,{label,"main"}},
        {labdef,{label,"main"}},
        {subu,sp,sp,188},
        {sw,fp,176,sp},
        {sw,ra,172,sp},
        {addu,fp,sp,188},
        {li,t0,' '},
        {sw,t0,0,sp},
        {li,t0,0},
        {sw,t0,4,sp},
        {li,t0,1},
        {sw,t0,8,sp},
        {lw,t0,4,sp},
        {lw,t1,8,sp},
        {mul,t2,t0,t1},
        {sw,t2,12,sp},
        {li,t0,0},
        {sw,t0,16,sp},
        {lw,t0,16,sp},
        {lw,t1,12,sp},
        {add,t2,t0,t1},
        {sw,t2,20,sp},
        {lw,t0,24,sp},
        {lw,t1,20,sp},
        {add,t2,t0,t1},
        {sw,t2,28,sp},
        {xxx,"--- XXX UNHANDLED: store byte"},
        {li,t0,0},
        {sw,t0,32,sp},
        {li,t0,1},
        {sw,t0,36,sp},
        {li,t0,1},
        {sw,t0,40,sp},
        {lw,t0,36,sp},
        {lw,t1,40,sp},
        {mul,t2,t0,t1},
        {sw,t2,44,sp},
        {li,t0,0},
        {sw,t0,48,sp},
        {lw,t0,48,sp},
        {lw,t1,44,sp},
        {add,t2,t0,t1},
        {sw,t2,52,sp},
        {lw,t0,24,sp},
        {lw,t1,52,sp},
        {add,t2,t0,t1},
        {sw,t2,56,sp},
        {xxx,"--- XXX UNHANDLED: store byte"},
        {li,t0,'\\n'},
        {sw,t0,60,sp},
        {li,t0,0},
        {sw,t0,64,sp},
        {li,t0,1},
        {sw,t0,68,sp},
        {lw,t0,64,sp},
        {lw,t1,68,sp},
        {mul,t2,t0,t1},
        {sw,t2,72,sp},
        {li,t0,4},
        {sw,t0,76,sp},
        {lw,t0,76,sp},
        {lw,t1,72,sp},
        {add,t2,t0,t1},
        {sw,t2,80,sp},
        {lw,t0,24,sp},
        {lw,t1,80,sp},
        {add,t2,t0,t1},
        {sw,t2,84,sp},
        {xxx,"--- XXX UNHANDLED: store byte"},
        {li,t0,0},
        {sw,t0,88,sp},
        {li,t0,1},
        {sw,t0,92,sp},
        {li,t0,1},
        {sw,t0,96,sp},
        {lw,t0,92,sp},
        {lw,t1,96,sp},
        {mul,t2,t0,t1},
        {sw,t2,100,sp},
        {li,t0,4},
        {sw,t0,104,sp},
        {lw,t0,104,sp},
        {lw,t1,100,sp},
        {add,t2,t0,t1},
        {sw,t2,108,sp},
        {lw,t0,24,sp},
        {lw,t1,108,sp},
        {add,t2,t0,t1},
        {sw,t2,112,sp},
        {xxx,"--- XXX UNHANDLED: store byte"},
        {li,t0,0},
        {sw,t0,116,sp},
        {lw,t0,116,sp},
        {sw,t0,120,sp},
        {j,{label,104,"while_test"}},
        {labdef,{label,105,"while_body"}},
        {xxx,"--- XXX UNHANDLED: call"},
        {li,t0,0},
        {sw,t0,124,sp},
        {lw,t0,24,sp},
        {lw,t1,124,sp},
        {add,t2,t0,t1},
        {sw,t2,128,sp},
        {xxx,"--- XXX UNHANDLED: call"},
        {xxx,"--- XXX UNHANDLED: call"},
        {xxx,"--- XXX UNHANDLED: call"},
        {li,t0,4},
        {sw,t0,132,sp},
        {lw,t0,24,sp},
        {lw,t1,132,sp},
        {add,t2,t0,t1},
        {sw,t2,136,sp},
        {xxx,"--- XXX UNHANDLED: call"},
        {li,t0,1},
        {sw,t0,140,sp},
        {lw,t0,120,sp},
        {lw,t1,140,sp},
        {add,t2,t0,t1},
        {sw,t2,144,sp},
        {lw,t0,144,sp},
        {sw,t0,120,sp},
        {labdef,{label,104,"while_test"}},
        {li,t0,10},
        {sw,t0,148,sp},
        {lw,t0,120,sp},
        {lw,t1,148,sp},
        {sle,t2,t0,t1},
        {sw,t2,152,sp},
        {xxx,"--- XXX UNHANDLED: cjump"},
        {labdef,{label,106,"while_end"}},
        {labdef,{label,103,"main_end"}},
        {lw,ra,172,sp},
        {lw,fp,176,sp},
        {addu,sp,sp,188},
        {jr,ra}]]}}.
