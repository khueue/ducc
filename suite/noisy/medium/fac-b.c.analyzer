{{source,[{1,"/* "},
          {2,
           "   Factorial function. Prints factorial of all numbers from 0 to 10."},
          {3,"*/"},
          {4,[]},
          {5,"void putint(int i);"},
          {6,"void putstring(char s[]);"},
          {7,[]},
          {8,"int fac(int n) {"},
          {9,"  if (n == 0) return 1;"},
          {10,"  else return n*fac(n-1);"},
          {11,"}"},
          {12,[]},
          {13,"int a;"},
          {14,"int main(void) {"},
          {15,"  int i;"},
          {16,"  char space[2];"},
          {17,"  char cr[2];"},
          {18,"  space[0] = ' ';  space[1] = 0;"},
          {19,"  cr[0]    = '\\n'; cr[1]    = 0;"},
          {20,[]},
          {21,"  i = 0;"},
          {22,[]},
          {23,"  while (i<=10) {"},
          {24,"    putint(i);"},
          {25,"    putstring(space);"},
          {26,"    putint(fac(i));"},
          {27,"    putstring(cr);"},
          {28,"    i = i + 1;"},
          {29,"  }"},
          {30,"}"}]},
 {ast,{{5,program},
       "suite/noisy/medium/fac-b.c",
       [{{5,fundec},void,"putint",[{{5,scalardec},int,"i"}]},
        {{6,fundec},void,"putstring",[{{6,farraydec},char,"s"}]},
        {{8,fundef},
         int,"fac",
         [{{8,scalardec},int,"n"}],
         [],
         [{{9,'if'},
           {{9,binop},{{9,ident},"n"},'==',{{9,intconst},0}},
           {{9,return},{{9,intconst},1}},
           {{10,return},
            {{10,binop},
             {{10,ident},"n"},
             '*',
             {{10,funcall},
              "fac",
              [{{10,binop},{{10,ident},"n"},'-',{{10,intconst},1}}]}}}}]},
        {{13,scalardec},int,"a"},
        {{14,fundef},
         int,"main",[],
         [{{15,scalardec},int,"i"},
          {{16,arraydec},char,"space",2},
          {{17,arraydec},char,"cr",2}],
         [{{18,binop},
           {{18,arrelem},"space",{{18,intconst},0}},
           '=',
           {{18,charconst},' '}},
          {{18,binop},
           {{18,arrelem},"space",{{18,intconst},1}},
           '=',
           {{18,intconst},0}},
          {{19,binop},
           {{19,arrelem},"cr",{{19,intconst},0}},
           '=',
           {{19,charconst},'\\n'}},
          {{19,binop},
           {{19,arrelem},"cr",{{19,intconst},1}},
           '=',
           {{19,intconst},0}},
          {{21,binop},{{21,ident},"i"},'=',{{21,intconst},0}},
          {{23,while},
           {{23,binop},{{23,ident},"i"},'<=',{{23,intconst},10}},
           [{{24,funcall},"putint",[{{24,ident},"i"}]},
            {{25,funcall},"putstring",[{{25,ident},"space"}]},
            {{26,funcall},"putint",[{{26,funcall},"fac",[{{26,ident},"i"}]}]},
            {{27,funcall},"putstring",[{{27,ident},"cr"}]},
            {{28,binop},
             {{28,ident},"i"},
             '=',
             {{28,binop},{{28,ident},"i"},'+',{{28,intconst},1}}}]}]}]}}}.
