{{source,[{1,"/* Fibbonacci, in the simple and naive form */"},
          {2,"/* Prints fibbonacci numbers for n=1..12 */"},
          {3,[]},
          {4,"void putint(int i);"},
          {5,"void putstring(char s[]);"},
          {6,[]},
          {7,"int fib(int n) {"},
          {8,"  if (n == 0) return 1;"},
          {9,"  if (n == 1) return 1;"},
          {10,"  return fib(n-1) + fib(n-2);"},
          {11,"}"},
          {12,[]},
          {13,"int main (void) {"},
          {14,"  int i;"},
          {15,"  char space[2];"},
          {16,"  char cr[2];"},
          {17,"  space[0] = ' ';  space[1] = 0;"},
          {18,"  cr[0]    = '\\n'; cr[1]    = 0;"},
          {19,[]},
          {20,[]},
          {21,"  i = 0;"},
          {22,[]},
          {23,"  while (i<=12) {"},
          {24,"    putint(i);"},
          {25,"    putstring(space);"},
          {26,"    putint(fib(i));"},
          {27,"    putstring(cr);"},
          {28,"    i = i + 1;"},
          {29,"  }"},
          {30,"}"}]},
 {ast,{{4,program},
       "suite/noisy/medium/fib.c",
       [{{4,fundec},void,"putint",[{{4,scalardec},int,"i"}]},
        {{5,fundec},void,"putstring",[{{5,farraydec},char,"s"}]},
        {{7,fundef},
         int,"fib",
         [{{7,scalardec},int,"n"}],
         [],
         [{{8,'if'},
           {{8,binop},{{8,ident},"n"},'==',{{8,intconst},0}},
           {{8,return},{{8,intconst},1}},
           nil},
          {{9,'if'},
           {{9,binop},{{9,ident},"n"},'==',{{9,intconst},1}},
           {{9,return},{{9,intconst},1}},
           nil},
          {{10,return},
           {{10,binop},
            {{10,funcall},"fib",[{{10,binop},{{10,ident},"n"},'-',{{10,intconst},1}}]},
            '+',
            {{10,funcall},"fib",[{{10,binop},{{10,ident},"n"},'-',{{10,intconst},2}}]}}}]},
        {{13,fundef},
         int,"main",[],
         [{{14,scalardec},int,"i"},{{15,arraydec},char,"space",2},{{16,arraydec},char,"cr",2}],
         [{{17,binop},{{17,arrelem},"space",{{17,intconst},0}},'=',{{17,charconst},' '}},
          {{17,binop},{{17,arrelem},"space",{{17,intconst},1}},'=',{{17,intconst},0}},
          {{18,binop},{{18,arrelem},"cr",{{18,intconst},0}},'=',{{18,charconst},'\\n'}},
          {{18,binop},{{18,arrelem},"cr",{{18,intconst},1}},'=',{{18,intconst},0}},
          {{21,binop},{{21,ident},"i"},'=',{{21,intconst},0}},
          {{23,while},
           {{23,binop},{{23,ident},"i"},'<=',{{23,intconst},12}},
           [{{24,funcall},"putint",[{{24,ident},"i"}]},
            {{25,funcall},"putstring",[{{25,ident},"space"}]},
            {{26,funcall},"putint",[{{26,funcall},"fib",[{{26,ident},"i"}]}]},
            {{27,funcall},"putstring",[{{27,ident},"cr"}]},
            {{28,binop},
             {{28,ident},"i"},
             '=',
             {{28,binop},{{28,ident},"i"},'+',{{28,intconst},1}}}]}]}]}}}.
