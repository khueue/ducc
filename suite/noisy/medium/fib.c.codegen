{{source,[{1,"/* Fibbonacci, in the simple and naive form */"},
          {2,"/* Prints fibbonacci numbers for n=1..12 */"},
          {3,[]},
          {4,"void putint(int i);"},
          {5,"void putstring(char s[]);"},
          {6,[]},
          {7,"int fib(int n) {"},
          {8,"  if (n == 0) return 1;"},
          {9,"  if (n == 1) return 1;"},
          {10,"  return fib(n-1) + fib(n-2);"},
          {11,"}"},
          {12,[]},
          {13,"int main (void) {"},
          {14,"  int i;"},
          {15,"  char space[2];"},
          {16,"  char cr[2];"},
          {17,"  space[0] = ' ';  space[1] = 0;"},
          {18,"  cr[0]    = '\\n'; cr[1]    = 0;"},
          {19,[]},
          {20,[]},
          {21,"  i = 0;"},
          {22,[]},
          {23,"  while (i<=12) {"},
          {24,"    putint(i);"},
          {25,"    putstring(space);"},
          {26,"    putint(fib(i));"},
          {27,"    putstring(cr);"},
          {28,"    i = i + 1;"},
          {29,"  }"},
          {30,"}"}]},
 {asm,[[{segment,text},
        {globl,{label,"fib"}},
        {labdef,{label,"fib"}},
        {subu,sp,sp,60},
        {sw,fp,56,sp},
        {sw,ra,52,sp},
        {addu,fp,sp,60},
        {labdef,{label,100,"fib_end"}},
        {lw,ra,52,sp},
        {lw,fp,56,sp},
        {addu,sp,sp,60},
        {j,ra}],
       [{segment,text},
        {globl,{label,"main"}},
        {labdef,{label,"main"}},
        {subu,sp,sp,188},
        {sw,fp,176,sp},
        {sw,ra,172,sp},
        {addu,fp,sp,188},
        {labdef,{label,103,"main_end"}},
        {lw,ra,172,sp},
        {lw,fp,176,sp},
        {addu,sp,sp,188},
        {j,ra}]]}}.
