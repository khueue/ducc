{{source,[{1,
           "/* Prints the numbers from 1 to 20. Puts an X next to the number if"},
          {2,
           "   even, and a Y if divisble by 3. If the number is *not* divisible by"},
          {3,
           "   3 but greater than 10, put a W next to it. Note that first if"},
          {4,"   statement is written without braces.  */"},
          {5,[]},
          {6,"void putint(int i);"},
          {7,"void putstring(char s[]);"},
          {8,[]},
          {9,"int main(void) {"},
          {10,"  int i;"},
          {11,"  char space[2];"},
          {12,"  char X[2];  char Y[2];"},
          {13,"  char W[2];  char nl[2];"},
          {14,[]},
          {15,"  space[0] = ' ';  space[1] = 0;"},
          {16,"  X[0]     = 'X';  X[1]     = 0;"},
          {17,"  Y[0]     = 'Y';  Y[1]     = 0;"},
          {18,"  W[0]     = 'W';  W[1]     = 0;"},
          {19,"  nl[0]    = '\\n'; nl[1]    = 0;"},
          {20,[]},
          {21,"  i = 0;"},
          {22,"  while (i < 21) {"},
          {23,"    putint(i);"},
          {24,"    putstring(space);"},
          {25,"    if (i/2*2==i) putstring(X);"},
          {26,"    if (i/3*3==i) {"},
          {27,"      putstring(Y);"},
          {28,"    } "},
          {29,"    else if (i>10) putstring(W);"},
          {30,"    putstring(nl);"},
          {31,"    i = i + 1;"},
          {32,"  }"},
          {33,"}"}]},
 {rtl,[{proc,{label,"main"},
             [],
             [{temp,2},
              {temp,3},
              {temp,4},
              {temp,5},
              {temp,6},
              {temp,7},
              {temp,8},
              {temp,9},
              {temp,10},
              {temp,11},
              {temp,12},
              {temp,13},
              {temp,14},
              {temp,15},
              {temp,16},
              {temp,17},
              {temp,18},
              {temp,19},
              {temp,20},
              {temp,21},
              {temp,22},
              {temp,23},
              {temp,24},
              {temp,25},
              {temp,26},
              {temp,27},
              {temp,28},
              {temp,29},
              {temp,30},
              {temp,31},
              {temp,32},
              {temp,33},
              {temp,34},
              {temp,35},
              {temp,36},
              {temp,37},
              {temp,38},
              {temp,39},
              {temp,40},
              {temp,41},
              {temp,42},
              {temp,43},
              {temp,44},
              {temp,45},
              {temp,46},
              {temp,47},
              {temp,48},
              {temp,49},
              {temp,50},
              {temp,51},
              {temp,52},
              {temp,53},
              {temp,54},
              {temp,55},
              {temp,56},
              {temp,57},
              {temp,58},
              {temp,59},
              {temp,60},
              {temp,61},
              {temp,62},
              {temp,63},
              {temp,64},
              {temp,65},
              {temp,66},
              {temp,67},
              {temp,68},
              {temp,69},
              {temp,70},
              {temp,71},
              {temp,72},
              {temp,73},
              {temp,74},
              {temp,75},
              {temp,76},
              {temp,77},
              {temp,78},
              {temp,79},
              {temp,80},
              {temp,81},
              {temp,82},
              {temp,83},
              {temp,84},
              {temp,85},
              {temp,86},
              {temp,87},
              {temp,88},
              {temp,89},
              {temp,90},
              {temp,91},
              {temp,92},
              {temp,93},
              {temp,94},
              {temp,95},
              {temp,96},
              {temp,97},
              {temp,98},
              {temp,99},
              {temp,100},
              {temp,101},
              {temp,102},
              {temp,103},
              {temp,104},
              {temp,105}],
             18,
             [{'- SOURCE -',15,binop,"  space[0] = ' ';  space[1] = 0;"},
              {'- SOURCE -',15,binop,"  space[0] = ' ';  space[1] = 0;"},
              {'- SOURCE -',15,charconst,"  space[0] = ' ';  space[1] = 0;"},
              {eval,{temp,3},{icon,' '}},
              {'- SOURCE -',15,intconst,"  space[0] = ' ';  space[1] = 0;"},
              {eval,{temp,4},{icon,0}},
              {eval,{temp,5},{icon,1}},
              {eval,{temp,6},{binop,'*',{temp,4},{temp,5}}},
              {eval,{temp,7},{icon,0}},
              {eval,{temp,8},{binop,'+',{temp,7},{temp,6}}},
              {eval,{temp,9},{binop,'+',{temp,1},{temp,8}}},
              {store,byte,{temp,9},{temp,3}},
              {'- SOURCE -',15,binop,"  space[0] = ' ';  space[1] = 0;"},
              {'- SOURCE -',15,binop,"  space[0] = ' ';  space[1] = 0;"},
              {'- SOURCE -',15,intconst,"  space[0] = ' ';  space[1] = 0;"},
              {eval,{temp,10},{icon,0}},
              {'- SOURCE -',15,intconst,"  space[0] = ' ';  space[1] = 0;"},
              {eval,{temp,11},{icon,1}},
              {eval,{temp,12},{icon,1}},
              {eval,{temp,13},{binop,'*',{temp,11},{temp,12}}},
              {eval,{temp,14},{icon,0}},
              {eval,{temp,15},{binop,'+',{temp,14},{temp,13}}},
              {eval,{temp,16},{binop,'+',{temp,1},{temp,15}}},
              {store,byte,{temp,16},{temp,10}},
              {'- SOURCE -',16,binop,"  X[0]     = 'X';  X[1]     = 0;"},
              {'- SOURCE -',16,binop,"  X[0]     = 'X';  X[1]     = 0;"},
              {'- SOURCE -',16,charconst,"  X[0]     = 'X';  X[1]     = 0;"},
              {eval,{temp,17},{icon,'X'}},
              {'- SOURCE -',16,intconst,"  X[0]     = 'X';  X[1]     = 0;"},
              {eval,{temp,18},{icon,0}},
              {eval,{temp,19},{icon,1}},
              {eval,{temp,20},{binop,'*',{temp,18},{temp,19}}},
              {eval,{temp,21},{icon,4}},
              {eval,{temp,22},{binop,'+',{temp,21},{temp,20}}},
              {eval,{temp,23},{binop,'+',{temp,1},{temp,22}}},
              {store,byte,{temp,23},{temp,17}},
              {'- SOURCE -',16,binop,"  X[0]     = 'X';  X[1]     = 0;"},
              {'- SOURCE -',16,binop,"  X[0]     = 'X';  X[1]     = 0;"},
              {'- SOURCE -',16,intconst,"  X[0]     = 'X';  X[1]     = 0;"},
              {eval,{temp,24},{icon,0}},
              {'- SOURCE -',16,intconst,"  X[0]     = 'X';  X[1]     = 0;"},
              {eval,{temp,25},{icon,1}},
              {eval,{temp,26},{icon,1}},
              {eval,{temp,27},{binop,'*',{temp,25},{temp,26}}},
              {eval,{temp,28},{icon,4}},
              {eval,{temp,29},{binop,'+',{temp,28},{temp,27}}},
              {eval,{temp,30},{binop,'+',{temp,1},{temp,29}}},
              {store,byte,{temp,30},{temp,24}},
              {'- SOURCE -',17,binop,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {'- SOURCE -',17,binop,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {'- SOURCE -',17,charconst,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {eval,{temp,31},{icon,'Y'}},
              {'- SOURCE -',17,intconst,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {eval,{temp,32},{icon,0}},
              {eval,{temp,33},{icon,1}},
              {eval,{temp,34},{binop,'*',{temp,32},{temp,33}}},
              {eval,{temp,35},{icon,8}},
              {eval,{temp,36},{binop,'+',{temp,35},{temp,34}}},
              {eval,{temp,37},{binop,'+',{temp,1},{temp,36}}},
              {store,byte,{temp,37},{temp,31}},
              {'- SOURCE -',17,binop,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {'- SOURCE -',17,binop,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {'- SOURCE -',17,intconst,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {eval,{temp,38},{icon,0}},
              {'- SOURCE -',17,intconst,"  Y[0]     = 'Y';  Y[1]     = 0;"},
              {eval,{temp,39},{icon,1}},
              {eval,{temp,40},{icon,1}},
              {eval,{temp,41},{binop,'*',{temp,39},{temp,40}}},
              {eval,{temp,42},{icon,8}},
              {eval,{temp,43},{binop,'+',{temp,42},{temp,41}}},
              {eval,{temp,44},{binop,'+',{temp,1},{temp,43}}},
              {store,byte,{temp,44},{temp,38}},
              {'- SOURCE -',18,binop,"  W[0]     = 'W';  W[1]     = 0;"},
              {'- SOURCE -',18,binop,"  W[0]     = 'W';  W[1]     = 0;"},
              {'- SOURCE -',18,charconst,"  W[0]     = 'W';  W[1]     = 0;"},
              {eval,{temp,45},{icon,'W'}},
              {'- SOURCE -',18,intconst,"  W[0]     = 'W';  W[1]     = 0;"},
              {eval,{temp,46},{icon,0}},
              {eval,{temp,47},{icon,1}},
              {eval,{temp,48},{binop,'*',{temp,46},{temp,47}}},
              {eval,{temp,49},{icon,12}},
              {eval,{temp,50},{binop,'+',{temp,49},{temp,48}}},
              {eval,{temp,51},{binop,'+',{temp,1},{temp,50}}},
              {store,byte,{temp,51},{temp,45}},
              {'- SOURCE -',18,binop,"  W[0]     = 'W';  W[1]     = 0;"},
              {'- SOURCE -',18,binop,"  W[0]     = 'W';  W[1]     = 0;"},
              {'- SOURCE -',18,intconst,"  W[0]     = 'W';  W[1]     = 0;"},
              {eval,{temp,52},{icon,0}},
              {'- SOURCE -',18,intconst,"  W[0]     = 'W';  W[1]     = 0;"},
              {eval,{temp,53},{icon,1}},
              {eval,{temp,54},{icon,1}},
              {eval,{temp,55},{binop,'*',{temp,53},{temp,54}}},
              {eval,{temp,56},{icon,12}},
              {eval,{temp,57},{binop,'+',{temp,56},{temp,55}}},
              {eval,{temp,58},{binop,'+',{temp,1},{temp,57}}},
              {store,byte,{temp,58},{temp,52}},
              {'- SOURCE -',19,binop,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {'- SOURCE -',19,binop,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {'- SOURCE -',19,charconst,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {eval,{temp,59},{icon,'\\n'}},
              {'- SOURCE -',19,intconst,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {eval,{temp,60},{icon,0}},
              {eval,{temp,61},{icon,1}},
              {eval,{temp,62},{binop,'*',{temp,60},{temp,61}}},
              {eval,{temp,63},{icon,16}},
              {eval,{temp,64},{binop,'+',{temp,63},{temp,62}}},
              {eval,{temp,65},{binop,'+',{temp,1},{temp,64}}},
              {store,byte,{temp,65},{temp,59}},
              {'- SOURCE -',19,binop,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {'- SOURCE -',19,binop,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {'- SOURCE -',19,intconst,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {eval,{temp,66},{icon,0}},
              {'- SOURCE -',19,intconst,"  nl[0]    = '\\n'; nl[1]    = 0;"},
              {eval,{temp,67},{icon,1}},
              {eval,{temp,68},{icon,1}},
              {eval,{temp,69},{binop,'*',{temp,67},{temp,68}}},
              {eval,{temp,70},{icon,16}},
              {eval,{temp,71},{binop,'+',{temp,70},{temp,69}}},
              {eval,{temp,72},{binop,'+',{temp,1},{temp,71}}},
              {store,byte,{temp,72},{temp,66}},
              {'- SOURCE -',21,binop,"  i = 0;"},
              {'- SOURCE -',21,binop,"  i = 0;"},
              {'- SOURCE -',21,intconst,"  i = 0;"},
              {eval,{temp,73},{icon,0}},
              {eval,{temp,2},{temp,73}},
              {'- SOURCE -',22,while,"  while (i < 21) {"},
              {jump,{label,101}},
              {labdef,{label,102}},
              {'- SOURCE -',23,funcall,"    putint(i);"},
              {'- SOURCE -',23,funcall,"    putint(i);"},
              {'- SOURCE -',23,ident,"    putint(i);"},
              {call,{temp,76},{label,"putint"},[{temp,2}]},
              {'- SOURCE -',24,funcall,"    putstring(space);"},
              {'- SOURCE -',24,funcall,"    putstring(space);"},
              {'- SOURCE -',24,ident,"    putstring(space);"},
              {eval,{temp,77},{icon,0}},
              {eval,{temp,78},{binop,'+',{temp,1},{temp,77}}},
              {call,{temp,79},{label,"putstring"},[{temp,78}]},
              {'- SOURCE -',25,'if',"    if (i/2*2==i) putstring(X);"},
              {'- SOURCE -',25,binop,"    if (i/2*2==i) putstring(X);"},
              {'- SOURCE -',25,binop,"    if (i/2*2==i) putstring(X);"},
              {'- SOURCE -',25,binop,"    if (i/2*2==i) putstring(X);"},
              {'- SOURCE -',25,ident,"    if (i/2*2==i) putstring(X);"},
              {'- SOURCE -',25,intconst,"    if (i/2*2==i) putstring(X);"},
              {eval,{temp,80},{icon,2}},
              {eval,{temp,81},{binop,'/',{temp,2},{temp,80}}},
              {'- SOURCE -',25,intconst,"    if (i/2*2==i) putstring(X);"},
              {eval,{temp,82},{icon,2}},
              {eval,{temp,83},{binop,'*',{temp,81},{temp,82}}},
              {'- SOURCE -',25,ident,"    if (i/2*2==i) putstring(X);"},
              {eval,{temp,84},{binop,'==',{temp,83},{temp,2}}},
              {cjump,eq,{temp,84},0,{label,104}},
              {'- SOURCE -',25,funcall,"    if (i/2*2==i) putstring(X);"},
              {'- SOURCE -',25,funcall,"    if (i/2*2==i) putstring(X);"},
              {'- SOURCE -',25,ident,"    if (i/2*2==i) putstring(X);"},
              {eval,{temp,85},{icon,4}},
              {eval,{temp,86},{binop,'+',{temp,1},{temp,85}}},
              {call,{temp,87},{label,"putstring"},[{temp,86}]},
              {labdef,{label,104}},
              {'- SOURCE -',26,'if',"    if (i/3*3==i) {"},
              {'- SOURCE -',26,binop,"    if (i/3*3==i) {"},
              {'- SOURCE -',26,binop,"    if (i/3*3==i) {"},
              {'- SOURCE -',26,binop,"    if (i/3*3==i) {"},
              {'- SOURCE -',26,ident,"    if (i/3*3==i) {"},
              {'- SOURCE -',26,intconst,"    if (i/3*3==i) {"},
              {eval,{temp,88},{icon,3}},
              {eval,{temp,89},{binop,'/',{temp,2},{temp,88}}},
              {'- SOURCE -',26,intconst,"    if (i/3*3==i) {"},
              {eval,{temp,90},{icon,3}},
              {eval,{temp,91},{binop,'*',{temp,89},{temp,90}}},
              {'- SOURCE -',26,ident,"    if (i/3*3==i) {"},
              {eval,{temp,92},{binop,'==',{temp,91},{temp,2}}},
              {cjump,eq,{temp,92},0,{label,105}},
              {'- SOURCE -',27,funcall,"      putstring(Y);"},
              {'- SOURCE -',27,funcall,"      putstring(Y);"},
              {'- SOURCE -',27,ident,"      putstring(Y);"},
              {eval,{temp,93},{icon,8}},
              {eval,{temp,94},{binop,'+',{temp,1},{temp,93}}},
              {call,{temp,95},{label,"putstring"},[{temp,94}]},
              {jump,{label,106}},
              {labdef,{label,105}},
              {'- SOURCE -',29,'if',"    else if (i>10) putstring(W);"},
              {'- SOURCE -',29,binop,"    else if (i>10) putstring(W);"},
              {'- SOURCE -',29,ident,"    else if (i>10) putstring(W);"},
              {'- SOURCE -',29,intconst,"    else if (i>10) putstring(W);"},
              {eval,{temp,96},{icon,10}},
              {eval,{temp,97},{binop,'>',{temp,2},{temp,96}}},
              {cjump,eq,{temp,97},0,{label,107}},
              {'- SOURCE -',29,funcall,"    else if (i>10) putstring(W);"},
              {'- SOURCE -',29,funcall,"    else if (i>10) putstring(W);"},
              {'- SOURCE -',29,ident,"    else if (i>10) putstring(W);"},
              {eval,{temp,98},{icon,12}},
              {eval,{temp,99},{binop,'+',{temp,1},{temp,98}}},
              {call,{temp,100},{label,"putstring"},[{temp,99}]},
              {labdef,{label,107}},
              {labdef,{label,106}},
              {'- SOURCE -',30,funcall,"    putstring(nl);"},
              {'- SOURCE -',30,funcall,"    putstring(nl);"},
              {'- SOURCE -',30,ident,"    putstring(nl);"},
              {eval,{temp,101},{icon,16}},
              {eval,{temp,102},{binop,'+',{temp,1},{temp,101}}},
              {call,{temp,103},{label,"putstring"},[{temp,102}]},
              {'- SOURCE -',31,binop,"    i = i + 1;"},
              {'- SOURCE -',31,binop,"    i = i + 1;"},
              {'- SOURCE -',31,binop,"    i = i + 1;"},
              {'- SOURCE -',31,ident,"    i = i + 1;"},
              {'- SOURCE -',31,intconst,"    i = i + 1;"},
              {eval,{temp,104},{icon,1}},
              {eval,{temp,105},{binop,'+',{temp,2},{temp,104}}},
              {eval,{temp,2},{temp,105}},
              {labdef,{label,101}},
              {'- SOURCE -',22,binop,"  while (i < 21) {"},
              {'- SOURCE -',22,ident,"  while (i < 21) {"},
              {'- SOURCE -',22,intconst,"  while (i < 21) {"},
              {eval,{temp,74},{icon,21}},
              {eval,{temp,75},{binop,'<',{temp,2},{temp,74}}},
              {cjump,neq,{temp,75},0,{label,102}},
              {labdef,{label,103}}],
             {labdef,{label,100}}}]}}.
