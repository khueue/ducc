{{source,[{1,"/* Some strange but legal expressions and statements. "},
          {2,"   For more examples of semantically correct code, see noisy/simple "},
          {3,"*/"},
          {4,[]},
          {5,"int x;"},
          {6,"char y;"},
          {7,[]},
          {8,"int main(void) {"},
          {9,"  int z;"},
          {10,"  char w;"},
          {11,[]},
          {12,"  x = x+y+z+w;"},
          {13,"  "},
          {14,"  x = z = 42;"},
          {15,[]},
          {16,"  x == z == 42;"},
          {17,[]},
          {18,"  x == (z = 99); // Not legal without the paren"},
          {19,[]},
          {20,"  while (x) x = 0;"},
          {21,[]},
          {22,"  if (123) y = 4; else y = 7;"},
          {23,[]},
          {24,"  w = x > y;"},
          {25,[]},
          {26,"  y = 0 < x < 10;"},
          {27,[]},
          {28,"  42;"},
          {29,"}"},
          {30,[]},
          {31,[]},
          {32,[]},
          {33,[]},
          {34,[]},
          {35,[]},
          {36,[]},
          {37,[]},
          {38,[]}]},
 {asm,[[{segment,data},{align,4},{labdef,{label,"x"}},{space,4}],
       [{segment,data},{align,4},{labdef,{label,"y"}},{space,1}],
       [{segment,text},
        {globl,{label,"main"}},
        {labdef,{label,"main"}},
        {subu,sp,sp,180},
        {sw,fp,176,sp},
        {sw,ra,172,sp},
        {addu,fp,sp,180},
        {la,t0,{label,"x"}},
        {sw,t0,0,sp},
        {lw,t0,0,sp},
        {lw,t1,0,t0},
        {sw,t1,4,sp},
        {la,t0,{label,"y"}},
        {sw,t0,8,sp},
        {lw,t0,8,sp},
        {lb,t1,0,t0},
        {sb,t1,12,sp},
        {lw,t0,4,sp},
        {lw,t1,12,sp},
        {add,t2,t0,t1},
        {sw,t2,16,sp},
        {lw,t0,16,sp},
        {lw,t1,20,sp},
        {add,t2,t0,t1},
        {sw,t2,24,sp},
        {lw,t0,24,sp},
        {lw,t1,28,sp},
        {add,t2,t0,t1},
        {sw,t2,32,sp},
        {la,t0,{label,"x"}},
        {sw,t0,36,sp},
        {lw,t0,36,sp},
        {lw,t1,32,sp},
        {sw,t1,0,t0},
        {li,t0,42},
        {sw,t0,40,sp},
        {lw,t0,40,sp},
        {sw,t0,20,sp},
        {la,t0,{label,"x"}},
        {sw,t0,44,sp},
        {lw,t0,44,sp},
        {lw,t1,40,sp},
        {sw,t1,0,t0},
        {la,t0,{label,"x"}},
        {sw,t0,48,sp},
        {lw,t0,48,sp},
        {lw,t1,0,t0},
        {sw,t1,52,sp},
        {lw,t0,52,sp},
        {lw,t1,20,sp},
        {seq,t2,t0,t1},
        {sw,t2,56,sp},
        {li,t0,42},
        {sw,t0,60,sp},
        {lw,t0,56,sp},
        {lw,t1,60,sp},
        {seq,t2,t0,t1},
        {sw,t2,64,sp},
        {la,t0,{label,"x"}},
        {sw,t0,68,sp},
        {lw,t0,68,sp},
        {lw,t1,0,t0},
        {sw,t1,72,sp},
        {li,t0,99},
        {sw,t0,76,sp},
        {lw,t0,76,sp},
        {sw,t0,20,sp},
        {lw,t0,72,sp},
        {lw,t1,76,sp},
        {seq,t2,t0,t1},
        {sw,t2,80,sp},
        {j,{label,101,"while_test"}},
        {labdef,{label,102,"while_body"}},
        {li,t0,0},
        {sw,t0,84,sp},
        {la,t0,{label,"x"}},
        {sw,t0,88,sp},
        {lw,t0,88,sp},
        {lw,t1,84,sp},
        {sw,t1,0,t0},
        {labdef,{label,101,"while_test"}},
        {la,t0,{label,"x"}},
        {sw,t0,92,sp},
        {lw,t0,92,sp},
        {lw,t1,0,t0},
        {sw,t1,96,sp},
        {lw,t0,96,sp},
        {bnez,t0,{label,102,"while_body"}},
        {labdef,{label,103,"while_end"}},
        {li,t0,123},
        {sw,t0,100,sp},
        {lw,t0,100,sp},
        {beqz,t0,{label,104,"if_else"}},
        {li,t0,4},
        {sw,t0,104,sp},
        {la,t0,{label,"y"}},
        {sw,t0,108,sp},
        {lw,t0,108,sp},
        {lb,t1,104,sp},
        {sb,t1,0,t0},
        {j,{label,105,"if_end"}},
        {labdef,{label,104,"if_else"}},
        {li,t0,7},
        {sw,t0,112,sp},
        {la,t0,{label,"y"}},
        {sw,t0,116,sp},
        {lw,t0,116,sp},
        {lb,t1,112,sp},
        {sb,t1,0,t0},
        {labdef,{label,105,"if_end"}},
        {la,t0,{label,"x"}},
        {sw,t0,120,sp},
        {lw,t0,120,sp},
        {lw,t1,0,t0},
        {sw,t1,124,sp},
        {la,t0,{label,"y"}},
        {sw,t0,128,sp},
        {lw,t0,128,sp},
        {lb,t1,0,t0},
        {sb,t1,132,sp},
        {lw,t0,124,sp},
        {lw,t1,132,sp},
        {sgt,t2,t0,t1},
        {sw,t2,136,sp},
        {lw,t0,136,sp},
        {sw,t0,28,sp},
        {li,t0,0},
        {sw,t0,140,sp},
        {la,t0,{label,"x"}},
        {sw,t0,144,sp},
        {lw,t0,144,sp},
        {lw,t1,0,t0},
        {sw,t1,148,sp},
        {lw,t0,140,sp},
        {lw,t1,148,sp},
        {slt,t2,t0,t1},
        {sw,t2,152,sp},
        {li,t0,10},
        {sw,t0,156,sp},
        {lw,t0,152,sp},
        {lw,t1,156,sp},
        {slt,t2,t0,t1},
        {sw,t2,160,sp},
        {la,t0,{label,"y"}},
        {sw,t0,164,sp},
        {lw,t0,164,sp},
        {lb,t1,160,sp},
        {sb,t1,0,t0},
        {li,t0,42},
        {sw,t0,168,sp},
        {labdef,{label,100,"main_end"}},
        {lw,ra,172,sp},
        {lw,fp,176,sp},
        {addu,sp,sp,180},
        {jr,ra}],
       [{segment,text},
        {globl,{label,"putint"}},
        {labdef,{label,"putint"}},
        {subu,sp,sp,8},
        {sw,fp,4,sp},
        {sw,ra,0,sp},
        {addu,fp,sp,8},
        {lw,a0,0,fp},
        {li,v0,1},
        {syscall},
        {lw,ra,0,sp},
        {lw,fp,4,sp},
        {addu,sp,sp,8},
        {jr,ra}],
       [{segment,text},
        {globl,{label,"getint"}},
        {labdef,{label,"getint"}},
        {subu,sp,sp,8},
        {sw,fp,4,sp},
        {sw,ra,0,sp},
        {addu,fp,sp,8},
        {li,v0,5},
        {syscall},
        {lw,ra,0,sp},
        {lw,fp,4,sp},
        {addu,sp,sp,8},
        {jr,ra}],
       [{segment,text},
        {globl,{label,"putstring"}},
        {labdef,{label,"putstring"}},
        {subu,sp,sp,8},
        {sw,fp,4,sp},
        {sw,ra,0,sp},
        {addu,fp,sp,8},
        {lw,a0,0,fp},
        {li,v0,4},
        {syscall},
        {lw,ra,0,sp},
        {lw,fp,4,sp},
        {addu,sp,sp,8},
        {jr,ra}],
       [{segment,text},
        {globl,{label,"getstring"}},
        {labdef,{label,"getstring"}},
        {subu,sp,sp,8},
        {sw,fp,4,sp},
        {sw,ra,0,sp},
        {addu,fp,sp,8},
        {lw,a0,0,fp},
        {li,a1,1024},
        {li,v0,8},
        {syscall},
        {lw,ra,0,sp},
        {lw,fp,4,sp},
        {addu,sp,sp,8},
        {jr,ra}]]}}.
