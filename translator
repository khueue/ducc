#!/usr/bin/env escript
%%! -pa ebin -Wall

usage() ->
    io:format('Usage: translator~n'),
    io:format('(Uses stdin/stdout.)~n').

main([]) ->
    Stream = '<stdin>',
    String = tool_chain:string_from_input(),
    Result = (catch process(Stream, String)),
    case Result of
        {_Source, {rtl,_RtlCode}} = Output ->
            tool_chain:term_to_output(Output);
        {tool_chain_exception, invalid_term} ->
            tool_chain:die(String)
    end;
main(_) ->
    usage().

process(Stream, String) ->
    {{source,Lines}, {ast,ParseTree}} = tool_chain:term_from_string(String),
    {ok, RtlCode} = translator_driver:translate(Stream, ParseTree, Lines),
    {{source,Lines}, {rtl,RtlCode}}.
